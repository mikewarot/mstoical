/* config.h.  Generated from config.h.in by CMake.  */

/* Print verbose debugging info */
#cmakedefine DEBUG

/* Define if you have the `pthread' library (-lpthread). */
#cmakedefine HAVE_LIBPTHREAD

/* Define if you have the `readline' library (-lreadline). */
#cmakedefine HAVE_LIBREADLINE

/* Define if you have the `termcap' library (-ltermcap). */
#cmakedefine HAVE_LIBTERMCAP

/* Define if you have the `regcomp' function. */
#cmakedefine HAVE_REGCOMP

/* Define if you have the <sys/sendfile.h> header file. */
#cmakedefine HAVE_SYS_SENDFILE_H

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT "@PACKAGE_BUGREPORT@"

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME "@PACKAGE_NAME@"

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING "@PACKAGE_STRING@"

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME "@PACKAGE_TARNAME@"

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION "@PACKAGE_VERSION@"

/* Track invocation, times, memory and etc.. */
#cmakedefine PROFILE

/* Perform bounds checking on stacks and arrays */
#cmakedefine SAFE

/* The size of a `double', as computed by sizeof. */
#cmakedefine SIZEOF_DOUBLE @SIZEOF_DOUBLE@

/* The size of a `float', as computed by sizeof. */
#cmakedefine SIZEOF_FLOAT @SIZEOF_FLOAT@

/* The size of a `int', as computed by sizeof. */
#cmakedefine SIZEOF_INT @SIZEOF_INT@

/* The size of a `long', as computed by sizeof. */
#cmakedefine SIZEOF_LONG @SIZEOF_LONG@

/* The size of a `short', as computed by sizeof. */
#cmakedefine SIZEOF_SHORT @SIZEOF_SHORT@

/* The size of a `void *', as computed by sizeof. */
#cmakedefine SIZEOF_VOID_P @SIZEOF_VOID_P@

/* Make sense of all this */

#ifdef HAVE_LIBREADLINE
#	ifdef HAVE_LIBTERMCAP
#		define READLINE 1
#	endif
#endif

#ifdef HAVE_LIBPTHREAD
#	define THREADS 1
#endif

#ifdef HAVE_REGCOMP
#	define REGEX 1
#endif

/* define the type of the 4-byte value to represent instructions with.
 * this must be the same size as a void pointer */
#if SIZEOF_VOID_P < 4
#	error "This program cannot support machines who's pointers are < 4 bytes"
#endif
#if SIZEOF_INT == SIZEOF_VOID_P
	typedef int b4;
	typedef unsigned int ub4;
#elif SIZEOF_LONG == SIZEOF_VOID_P
		typedef long b4;
		typedef unsigned long ub4;
#else
#error "FIXME. Neither sizeof(long) or sizeof(int) matches sizeof(void*)"
#endif

/* proclaim ourselves */
#ifndef _GNU_SOURCE
#	define _GNU_SOURCE 1
#endif
